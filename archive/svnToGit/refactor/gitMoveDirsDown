#!/bin/bash
#
# gitMoveDirsDown -t <destination dir> -s <source dir1> [<source dir2> [...]]
#
# Takes files/directores specified after the "-s" option and moves
# them into <destination dir> in the same repository. The histories
# of all files is retained through the move, so that they appear as
# though they always lived in the new locations. 
#
# All specified directories must be present and writable.
#
# Erica Snider
# Fermilab
# 17-Jan-2014



function usage() {
  echo "Usage:  gitMoveDirsDown -t <target dir> -s <source dir1> [<source dir2> [...]]"
  echo "        (order of options is not important)"
  echo "        (can specify -s multiple times)"
}

# Check that we are in a git repository
#
if [[ ! -d .git ]] ; then
  echo "ERROR:  not in a git repository!!" 
  exit 1
fi

# Get source and target directories
#
while (( $# )) ; do
  arg=$1

  case $arg in \
    -t) shift
        target_dir=$1
        unset finding_sources
	shift 
	
	;;
    -s) shift
        source_dirs="${source_dirs} $1"
	finding_sources=true
	shift
	;;
    *)  if [[ -n $finding_sources ]] ; then
          source_dirs="${source_dirs} $1"
	  shift
	else
	  echo "ERROR:  missing option/argument!!"
	  echo "You must specify at least one source dir and one target dir"
	  usage
	  exit 1
	  
        fi
	;;
  esac
done

echo "Source directories = $source_dirs"
echo "Target directory   = $target_dir"

# Check that everything exists and is writable
#
if [[ -z $source_dirs ]] ; then
  echo "ERROR:  no source directory specified"
  usage
  exit 1
fi

for dir in $source_dirs ; do
  if [[ ! -d $dir ]] ; then
    echo "ERROR:  source directory \"$dir\" does not exist" 
    usage
    exit 1
  elif [[ ! -w $dir ]] ; then
    echo "ERROR:  source directory \"$dir\" not writable" 
    usage
    exit 1
  fi
done

if [[ -z $target_dir ]] ; then
  echo "ERROR:  no target directory specified"
  usage
fi

if [[ ! -d `dirname $target_dir` ]] ; then
  echo "ERROR:  target parent directory \"`dirname $target_dir`\" does not exist"
  usage
  exit 1
elif [[ ! -w `dirname $target_dir` ]] ; then
  echo "ERROR:  target parent directory \"`dirname $target_dir`\" not writable"
  usage
  exit 1
fi

# Now start the move
#
for source in $source_dirs ; do
  echo "gitMoveDirsDown:  moving ${source} to ${target_dir}/${source}"
  git filter-branch -f --tree-filter \
        "test -e ${source} && ( [[ -d ${target_dir} ]] || mkdir ${target_dir} ) && mv ${source} ${target_dir}/${source} || echo '  Nothing to do'" HEAD
done

echo "Done!"	
  
